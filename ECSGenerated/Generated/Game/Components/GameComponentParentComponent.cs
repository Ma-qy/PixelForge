//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Component.ParentComponent componentParent { get { return (Component.ParentComponent)GetComponent(GameComponentsLookup.ComponentParent); } }
    public bool hasComponentParent { get { return HasComponent(GameComponentsLookup.ComponentParent); } }

    public void AddComponentParent(string newParentName) {
        var index = GameComponentsLookup.ComponentParent;
        var component = (Component.ParentComponent)CreateComponent(index, typeof(Component.ParentComponent));
        component.ParentName = newParentName;
        AddComponent(index, component);
    }

    public void ReplaceComponentParent(string newParentName) {
        var index = GameComponentsLookup.ComponentParent;
        var component = (Component.ParentComponent)CreateComponent(index, typeof(Component.ParentComponent));
        component.ParentName = newParentName;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentParent() {
        RemoveComponent(GameComponentsLookup.ComponentParent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentParent;

    public static Entitas.IMatcher<GameEntity> ComponentParent {
        get {
            if (_matcherComponentParent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentParent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentParent = matcher;
            }

            return _matcherComponentParent;
        }
    }
}
