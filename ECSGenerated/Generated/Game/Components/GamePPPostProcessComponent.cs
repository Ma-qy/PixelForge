//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity pPPostProcessEntity { get { return GetGroup(GameMatcher.PPPostProcess).GetSingleEntity(); } }
    public PP.PostProcess pPPostProcess { get { return pPPostProcessEntity.pPPostProcess; } }
    public bool hasPPPostProcess { get { return pPPostProcessEntity != null; } }

    public GameEntity SetPPPostProcess(bool newEnabled, int newSequence, System.Collections.Generic.List<int> newLayers, PP.PostProcess newPostProcessEffect) {
        if (hasPPPostProcess) {
            throw new Entitas.EntitasException("Could not set PPPostProcess!\n" + this + " already has an entity with PP.PostProcess!",
                "You should check if the context already has a pPPostProcessEntity before setting it or use context.ReplacePPPostProcess().");
        }
        var entity = CreateEntity();
        entity.AddPPPostProcess(newEnabled, newSequence, newLayers, newPostProcessEffect);
        return entity;
    }

    public void ReplacePPPostProcess(bool newEnabled, int newSequence, System.Collections.Generic.List<int> newLayers, PP.PostProcess newPostProcessEffect) {
        var entity = pPPostProcessEntity;
        if (entity == null) {
            entity = SetPPPostProcess(newEnabled, newSequence, newLayers, newPostProcessEffect);
        } else {
            entity.ReplacePPPostProcess(newEnabled, newSequence, newLayers, newPostProcessEffect);
        }
    }

    public void RemovePPPostProcess() {
        pPPostProcessEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PP.PostProcess pPPostProcess { get { return (PP.PostProcess)GetComponent(GameComponentsLookup.PPPostProcess); } }
    public bool hasPPPostProcess { get { return HasComponent(GameComponentsLookup.PPPostProcess); } }

    public void AddPPPostProcess(bool newEnabled, int newSequence, System.Collections.Generic.List<int> newLayers, PP.PostProcess newPostProcessEffect) {
        var index = GameComponentsLookup.PPPostProcess;
        var component = (PP.PostProcess)CreateComponent(index, typeof(PP.PostProcess));
        component.Enabled = newEnabled;
        component.Sequence = newSequence;
        component.Layers = newLayers;
        component.PostProcessEffect = newPostProcessEffect;
        AddComponent(index, component);
    }

    public void ReplacePPPostProcess(bool newEnabled, int newSequence, System.Collections.Generic.List<int> newLayers, PP.PostProcess newPostProcessEffect) {
        var index = GameComponentsLookup.PPPostProcess;
        var component = (PP.PostProcess)CreateComponent(index, typeof(PP.PostProcess));
        component.Enabled = newEnabled;
        component.Sequence = newSequence;
        component.Layers = newLayers;
        component.PostProcessEffect = newPostProcessEffect;
        ReplaceComponent(index, component);
    }

    public void RemovePPPostProcess() {
        RemoveComponent(GameComponentsLookup.PPPostProcess);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPPPostProcess;

    public static Entitas.IMatcher<GameEntity> PPPostProcess {
        get {
            if (_matcherPPPostProcess == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PPPostProcess);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPPPostProcess = matcher;
            }

            return _matcherPPPostProcess;
        }
    }
}
