//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Component.BasicMoveComponent componentBasicMove { get { return (Component.BasicMoveComponent)GetComponent(GameComponentsLookup.ComponentBasicMove); } }
    public bool hasComponentBasicMove { get { return HasComponent(GameComponentsLookup.ComponentBasicMove); } }

    public void AddComponentBasicMove(bool newIsActive, float newSpeed) {
        var index = GameComponentsLookup.ComponentBasicMove;
        var component = (Component.BasicMoveComponent)CreateComponent(index, typeof(Component.BasicMoveComponent));
        component.IsActive = newIsActive;
        component.Speed = newSpeed;
        AddComponent(index, component);
    }

    public void ReplaceComponentBasicMove(bool newIsActive, float newSpeed) {
        var index = GameComponentsLookup.ComponentBasicMove;
        var component = (Component.BasicMoveComponent)CreateComponent(index, typeof(Component.BasicMoveComponent));
        component.IsActive = newIsActive;
        component.Speed = newSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentBasicMove() {
        RemoveComponent(GameComponentsLookup.ComponentBasicMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentBasicMove;

    public static Entitas.IMatcher<GameEntity> ComponentBasicMove {
        get {
            if (_matcherComponentBasicMove == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentBasicMove);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentBasicMove = matcher;
            }

            return _matcherComponentBasicMove;
        }
    }
}
