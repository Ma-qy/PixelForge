//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Component.NameComponent componentName { get { return (Component.NameComponent)GetComponent(GameComponentsLookup.ComponentName); } }
    public bool hasComponentName { get { return HasComponent(GameComponentsLookup.ComponentName); } }

    public void AddComponentName(string newName) {
        var index = GameComponentsLookup.ComponentName;
        var component = (Component.NameComponent)CreateComponent(index, typeof(Component.NameComponent));
        component.Name = newName;
        AddComponent(index, component);
    }

    public void ReplaceComponentName(string newName) {
        var index = GameComponentsLookup.ComponentName;
        var component = (Component.NameComponent)CreateComponent(index, typeof(Component.NameComponent));
        component.Name = newName;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentName() {
        RemoveComponent(GameComponentsLookup.ComponentName);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentName;

    public static Entitas.IMatcher<GameEntity> ComponentName {
        get {
            if (_matcherComponentName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentName = matcher;
            }

            return _matcherComponentName;
        }
    }
}
